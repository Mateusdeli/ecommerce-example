version: '3'

services:
  app:
    build:
      dockerfile: ./Dockerfile
    container_name: app-ecommerce
    restart: always
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine3.17
    container_name: redis-ecommerce
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  db:
    container_name: db-ecommerce
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  ngrok:
    image: ngrok/ngrok:alpine
    container_name: ngrok-ecommerce
    restart: always
    env_file:
      - .env
    environment:
        NGROK_AUTHTOKEN: '${NGROK_AUTHTOKEN}'
    command: 'http app:${PORT}'
    ports:
        - ${NGROK_PORT}:${NGROK_PORT}
    depends_on:
      - app

  adminer:
    container_name: db-dashboard-ecommerce
    image: adminer
    restart: always
    links:
      - db
    ports:
      - 8080:8080
    depends_on:
      - db